/*=====
@mixins
=====*/

@function px2bl($px){
  @return $px/14px;
}

@import 'font-settings';

@mixin padding-leader(
  $lines: 1,
  $font-size: $base-font-size,
  $adjust: false,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size)
  ){
  @if($adjust){
    $lines: $lines + get-base($font-size,$font-family,$line-height);
  }
  $adjustment: $lines * $base-line-height / $font-size;
  padding-top: #{$adjustment}em;
};

@mixin padding-trailer(
  $lines: 1,
  $font-size: $base-font-size,
  $adjust: false,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size)
  ){
  @if($adjust){
    $lines: $lines - get-base($font-size,$font-family,$line-height);
  }
  $adjustment: $lines * $base-line-height / $font-size;
  padding-bottom: #{$adjustment}em;
};

@mixin margin-leader(
  $lines: 1,
  $font-size: $base-font-size,
  $adjust: false,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size)
  ){
  @if($adjust){
    $lines: $lines + get-base($font-size,$font-family,$line-height);
  }
  $adjustment: $lines * $base-line-height / $font-size;
  margin-top: #{$adjustment}em;
};

@mixin margin-trailer(
  $lines: 1,
  $font-size: $base-font-size,
  $adjust: false,
  $font-family: $default-font-family,
  $line-height: lines-for-font-size($font-size)
  ){
  @if($adjust){
    $lines: $lines - get-base($font-size,$font-family,$line-height);
  }
  $adjustment: $lines * $base-line-height / $font-size;
  margin-bottom: #{$adjustment}em;
};

@mixin neutralise(){
  font-family: $default-font-family, $fallback-font-stack;
  font-size: $base-font-size;
  line-height: $base-line-height;
  margin:{
    top: 0;
    bottom: 0;
  }
  padding:{
    top: 0;
    bottom: 0;
  }
}

@function lines-for-font-size(
  $font-size: $base-font-size
  ){
  $lines: ceil($font-size / $base-line-height);
  @if($lines * $base-line-height - $font-size < $min-line-padding * 2){
    $lines: $lines + 1;
  }
  @return $lines;
}

@mixin establish-baseline($font-size: $base-font-size) {
  html {
    font-size: $font-size;
    line-height: lines-for-font-size($font-size) * $base-line-height;
  }
}


@function get-base(
  $font-size: $base-font-size,
  $font-family: $default-font-family,
  $lines: lines-for-font-size($font-size)
  ){
  @if map-has-key($base-base-fonts,$font-family){
    $font-settings: map-get($base-base-fonts,$font-family);
    @if map-has-key($font-settings, $font-size){
      $size-settings: map-get($font-settings, $font-size);
      @if map-has-key($size-settings, $lines){
        @return map-get($size-settings, $lines);
      } @else {
        @return map-get($size-settings, 'd');
      }
    }
  }
  @return 0 //No size found;
}

@function get-bottom-base(
  $font-size: $base-font-size,
  $font-family: $default-font-family,
  $lines: lines-for-font-size($font-size)
  ){
  @return 1 - get-base($font-size, $font-family, $lines);
}

@mixin base-base(
  $font-size: $base-font-size, 
  $font-family: $default-font-family,
  $trailer: lines-for-font-size($font-size), // Trailing white space control.
  $leader: 0, //Leading white space control
  $lines: lines-for-font-size($font-size), //Units of lineheight
  $ffs: $fallback-font-stack
){
  $base_adjust: get-base($font-size, $font-family, $lines);
  $font_adjust: ($base-font-size / $font-size);
  $top_adjust: $base_adjust * $font_adjust;
  padding-top: #{(($base_adjust + $leader) * $base-line-height) / $font-size}em;
  margin-bottom: #{(($trailer - $base_adjust) * $base-line-height) / $font-size}em;
  margin-top: 0;
  padding-bottom: 0;
  font-size: #{1 / $font_adjust}em;
  line-height: $lines * $base-line-height;
  font-family: $font-family, $ffs;
}
